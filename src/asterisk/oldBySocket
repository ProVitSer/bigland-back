
    // public async trasferCall(channelId: string, extension: string): Promise<void> {
    //     this.log.info(`Перевод вызов через панель канала ${channelId} на добавочный ${extension}`);
    //     const action = new namiLib.Actions.BlindTransfer();
    //     action.Channel = channelId;
    //     action.Context = 'from-internal-xfer';
    //     action.Exten = extension;
    //     const resultSend : any = await new Promise((resolve) =>{
    //         this.client.send(action, (event: any) => {
    //             resolve(event);
    //         });
    //     });
    //     this.log.info(resultSend)
    // }

    // public async getDNDStatus(extension: string): Promise<void> {
    //     const action = new namiLib.Actions.DbGet();
    //     action.Family = 'DND';
    //     action.Key = extension;
    //     const resultSend : AsteriskDNDStatusResponse = await new Promise((resolve) =>{
    //         this.client.send(action, (event: any) => {
    //             resolve(event);
    //         });
    //     });
    //     this.log.info(resultSend);

    //     return (resultSend.events[0].val == '')? 
    //         this.setDNDStatus(extension, statusDND.on,statusHint.on) : 
    //         this.setDNDStatus(extension, statusDND.off,statusHint.off)
    // }

    // private async setDNDStatus(extension: string, dnd : statusDND, hint: statusHint): Promise<void>  {
    //     const action = new namiLib.Actions.DbPut();
    //     action.Family = 'DND';
    //     action.Key = extension;
    //     action.Val = dnd;
    //     const resultSend: AsteriskStatusResponse = await new Promise((resolve) => {
    //         this.client.send(action, (event: any) => {
    //             resolve(event)
    //         });
    //     });
    //     this.log.info(resultSend);
    //     return (resultSend.response == 'Success')? this.setHintStatus(extension, hint) : null
    // }

    // private async setHintStatus(extension: string, hint: statusHint): Promise<void>  {
    //     const action = new namiLib.Actions.Command();
    //     action.Command = `devstate change Custom:DND${extension} ${hint}`;
    //     return await new Promise((resolve) => {
    //         this.client.send(action)
    //         resolve();
    //     });
    // }

    // public async getExtensionStatus() {
    //     const action = new namiLib.Actions.Status();
    //     const resultExtensionStatus: AsteriskStatusResponse = await new Promise((resolve, reject) => {
    //         this.client.send(action, (event:any)=>{
    //             resolve(event)
    //         })
    //     });
    //     return this.formatExtenStatus(resultExtensionStatus)
    // }

    // private formatExtenStatus(status: AsteriskStatusResponse){
    //     return status.events.map( (event: EventsStatus) => {
    //         if (event.hasOwnProperty(`lines`) && event.hasOwnProperty(`EOL`) && event.hasOwnProperty(`variables`)) {
    //             delete event.lines;
    //             delete event.EOL;
    //             delete event.variables;
    //             return event;
    //         }
    //     });

    // }